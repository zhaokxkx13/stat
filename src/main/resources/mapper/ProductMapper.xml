<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhaokxkx13.dao.inf.ProductMapper">

    <resultMap id="BaseResultMap" type="com.zhaokxkx13.dao.entity.Product">
        <result column="product_id" property="id" jdbcType="INTEGER"/>
        <result column="product_name" property="name" jdbcType="VARCHAR"/>
        <result column="product_type_big" property="typeBig" jdbcType="VARCHAR"/>
        <result column="product_type_small" property="typeSmall" jdbcType="VARCHAR"/>
        <result column="product_cost" property="cost" jdbcType="DOUBLE"/>
        <result column="product_price" property="price" jdbcType="DOUBLE"/>
        <result column="product_stock" property="stock" jdbcType="INTEGER"/>
        <result column="product_spec" property="spec" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="AssoResultMap" type="com.zhaokxkx13.dao.entity.Product" extends="BaseResultMap">
        <collection property="productOrderList" column="product_id"
                    select="com.zhaokxkx13.dao.inf.ProductOrderMapper.selectByProductId"/>
    </resultMap>

    <select id="selectById" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
        p.id AS product_id,
        p.name AS product_name,
        p.type_big AS product_type_big,
        p.type_small AS product_type_small,
        p.cost AS product_cost,
        p.price AS product_price,
        p.stock AS product_stock,
        p.spec AS product_spec
        FROM
        product p
        WHERE
        p.id = #{id}
    </select>

    <select id="selectByName" parameterType="string" resultMap="AssoResultMap">
        SELECT
        p.id AS product_id,
        p.name AS product_name,
        p.type_big AS product_type_big,
        p.type_small AS product_type_small,
        p.cost AS product_cost,
        p.price AS product_price,
        p.stock AS product_stock,
        p.spec AS product_spec
        FROM
        product p
        WHERE
        p.name = #{productName}
    </select>

    <select id="selectByNameRaw" parameterType="string" resultMap="BaseResultMap">
        SELECT
        p.id AS product_id,
        p.name AS product_name,
        p.type_big AS product_type_big,
        p.type_small AS product_type_small,
        p.cost AS product_cost,
        p.price AS product_price,
        p.stock AS product_stock,
        p.spec AS product_spec
        FROM
        product p
        WHERE
        p.name = #{productName}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            p.id         AS product_id,
            p.name       AS product_name,
            p.type_big   AS product_type_big,
            p.type_small AS product_type_small,
            p.cost       AS product_cost,
            p.price      AS product_price,
            p.stock      AS product_stock,
            p.spec       AS product_spec
        FROM
            product p
    </select>

    <insert id="insertAll" parameterType="java.util.List">
        INSERT INTO product (name, type_big, type_small, cost, price, stock, spec) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.name},#{item.typeBig},#{item.typeSmall},#{item.cost},#{item.price},#{item.stock},#{item.spec})
        </foreach>
    </insert>

    <select id="selectProductName" resultType="String">
        SELECT DISTINCT name
        FROM product
    </select>
</mapper>