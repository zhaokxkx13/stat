<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhaokxkx13.dao.inf.RoleMapper">
    <resultMap id="BaseResultMap" type="com.zhaokxkx13.dao.entity.Role">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="RoleMapper" type="com.zhaokxkx13.dao.entity.Role" extends="BaseResultMap">
        <collection property="permissionList" ofType="com.zhaokxkx13.dao.entity.Permission">
            <id column="pId" property="id" jdbcType="INTEGER"/>
            <result column="pDescribe" property="description" jdbcType="VARCHAR"/>
            <result column="pToken" property="token" jdbcType="VARCHAR"/>
            <result column="pUrl" property="url" jdbcType="VARCHAR"/>
            <result column="pRoleId" property="roleid" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, description
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM role
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.zhaokxkx13.dao.entity.Role">
        INSERT INTO role (id, name, description
        )
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.zhaokxkx13.dao.entity.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zhaokxkx13.dao.entity.Role">
        update role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhaokxkx13.dao.entity.Role">
        UPDATE role
        SET name = #{name,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectRolePermissionById" parameterType="Integer" resultMap="RoleMapper">
        SELECT
        r.id,
        r.name,
        r.description,
        p.id AS pId,
        p.token AS pToken,
        p.url AS pUrl,
        p.roleid AS pRoleId,
        p.description AS pDescribe
        FROM role r
        JOIN permission p ON p.roleid = r.id
        WHERE r.id = #{id}
    </select>

    <select id="selectRolePermissionByName" parameterType="Integer" resultMap="RoleMapper">
        SELECT
        r.id,
        r.name,
        r.description,
        p.id AS pId,
        p.token AS pToken,
        p.url AS pUrl,
        p.roleid AS pRoleId,
        p.description AS pDescribe
        FROM role r
        JOIN permission p ON p.roleid = r.id
        WHERE r.name = #{name}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT *
        FROM role
    </select>
</mapper>